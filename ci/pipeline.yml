---
resource_types:
  - name: google-cloud-storage
    type: docker-image
    source:
      repository: frodenas/gcs-resource

resources:
- name: pal-tracker
  type: git
  source:
    uri: ((yellow-pal-tracker/Notes/github-repository))
    branch: master
    private_key: ((yellow-pal-tracker/Notes/github-private-key))

- name: pal-tracker-artifacts
  type: google-cloud-storage
  source:
    bucket: triage-pal-tracker
    regexp: yellow/releases/pal-tracker-(.*).jar
    json_key: ((yellow-pal-tracker/Notes/triage-pal-tracker-bucket-gcp-key))

- name: version
  type: semver
  source:
    driver: gcs
    bucket: triage-pal-tracker
    key: yellow/versions/version
    json_key: ((yellow-pal-tracker/Notes/triage-pal-tracker-bucket-gcp-key))

- name: review-deployment
  type: cf
  source:
    api: https://api.run.pivotal.io
    username: ((PWS: App Deployment Account/Username))
    password: ((PWS: App Deployment Account/Password))
    organization: Davos
    space: yellow-review

- name: production-deployment
  type: cf
  source:
    api: https://api.run.pivotal.io
    username: ((PWS: App Deployment Account/Username))
    password: ((PWS: App Deployment Account/Password))
    organization: Davos
    space: yellow

jobs:
- name: build
  plan:
  - aggregate:
    - get: pal-tracker
      trigger: true
    - get: version
      params: {bump: patch}
  - task: build and test
    file: pal-tracker/ci/build.yml
  - aggregate:
    - put: pal-tracker-artifacts
      params:
        file: build-output/pal-tracker-*.jar
    - put: version
      params:
        file: version/number

- name: deploy-review
  plan:
  - aggregate:
    - get: pal-tracker
      passed: [build]
    - get: pal-tracker-artifacts
      trigger: true
      passed: [build]
  - task: migrate database
    file: pal-tracker/ci/migrateDatabase.yml
    params:
      CF_API_URL: https://api.run.pivotal.io
      CF_USERNAME: ((PWS: App Deployment Account/Username))
      CF_PASSWORD: ((PWS: App Deployment Account/Password))
      CF_ORG: Davos
      CF_SPACE: yellow-review
      MYSQL_IP: ((yellow-pal-tracker/Notes/review-db-ip))
      DATABASE_NAME: ((yellow-pal-tracker/Notes/review-db-name))
      DATABASE_USERNAME: ((yellow-pal-tracker/Notes/review-db-username))
      DATABASE_PASSWORD: ((yellow-pal-tracker/Notes/review-db-password))
  - put: review-deployment
    params:
      manifest: pal-tracker/manifest-review.yml
      path: pal-tracker-artifacts/pal-tracker-*.jar
      environment_variables:
        WELCOME_MESSAGE: "Hello from the review environment"

- name: deploy-production
  plan:
  - aggregate:
    - get: pal-tracker
      passed: [deploy-review]
    - get: pal-tracker-artifacts
      passed: [deploy-review]
  - task: migrate database
    file: pal-tracker/ci/migrateDatabase.yml
    params:
      CF_API_URL: https://api.run.pivotal.io
      CF_USERNAME: ((PWS: App Deployment Account/Username))
      CF_PASSWORD: ((PWS: App Deployment Account/Password))
      CF_ORG: Davos
      CF_SPACE: yellow
      MYSQL_IP: ((yellow-pal-tracker/Notes/db-ip))
      DATABASE_NAME: ((yellow-pal-tracker/Notes/db-name))
      DATABASE_USERNAME: ((yellow-pal-tracker/Notes/db-username))
      DATABASE_PASSWORD: ((yellow-pal-tracker/Notes/db-password))
  - put: production-deployment
    params:
      manifest: pal-tracker/manifest-production.yml
      path: pal-tracker-artifacts/pal-tracker-*.jar
      environment_variables:
        WELCOME_MESSAGE: "Hello from the production environment"